parm {{ prmtop_fpath }}
trajin {{ traj_fpath }} {{ inital_frame }} {{ final_frame }} {{ sample_step }}
{% for center_atom in center_atoms %}
vector {{ box_command }} [center-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] {{ center_atom }} {{ plane_atoms[loop.index0][0] }}
vector {{ box_command }} [first-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] {{ plane_atoms[loop.index0][0] }} {{ plane_atoms[loop.index0][1] }}
vector {{ box_command }} [second-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] {{ plane_atoms[loop.index0][0] }} {{ plane_atoms[loop.index0][2] }}
vectormath vec1 [first-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] vec2 [second-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] name [plane-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] norm crossproduct
vectormath vec1 [center-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] vec2 [plane-{{ number_tuples[loop.index0][0] }}-{{ number_tuples[loop.index0][1] }}] out {{ name }}.{{ number_tuples[loop.index0][0] }}-{{ name_tuples[loop.index0][0] }}-to-{{ number_tuples[loop.index0][1] }}-{{ name_tuples[loop.index0][1] }}.out-of-plane.dat dotproduct
{% endfor %}
run
exit
